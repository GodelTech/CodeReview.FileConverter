{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "3.8.0.0",
        "fileVersion": "3.8.0-5.20604.10 (9ed4b774)",
        "semanticVersion": "3.8.0",
        "language": ""
      },
      "results": [
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ActivityExecutor.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'ActivityExecutor.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ActivityExecutor.cs",
                "region": {
                  "startLine": 117,
                  "startColumn": 1,
                  "endLine": 117,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ActivityFactory.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/CompositeActivity.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'CompositeActivity.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/CompositeActivity.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 1,
                  "endLine": 35,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ExecutionResult.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'ExecutionResult.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ExecutionResult.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 1,
                  "endLine": 9,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ExportArtifactsActivity.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'ExportArtifactsActivity.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ExportArtifactsActivity.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 1,
                  "endLine": 90,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/IActivity.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'IActivity.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/IActivity.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 1,
                  "endLine": 9,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/IActivityExecutor.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'IActivityExecutor.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/IActivityExecutor.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 1,
                  "endLine": 10,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/IActivityFactory.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'IActivityFactory.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/IActivityFactory.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 1,
                  "endLine": 9,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ImportDataActivity.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'ImportDataActivity.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ImportDataActivity.cs",
                "region": {
                  "startLine": 79,
                  "startColumn": 1,
                  "endLine": 79,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/IProcessingContext.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'IProcessingContext.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/IProcessingContext.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 1,
                  "endLine": 13,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/IProcessingContextFactory.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'IProcessingContextFactory.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/IProcessingContextFactory.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 1,
                  "endLine": 7,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ProcessingContext.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'ProcessingContext.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ProcessingContext.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 1,
                  "endLine": 39,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ProcessingContextFactory.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'ProcessingContextFactory.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ProcessingContextFactory.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 1,
                  "endLine": 20,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/RunProcessorsActivity.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/CreateNewManifestCommand.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'CreateNewManifestCommand.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/CreateNewManifestCommand.cs",
                "region": {
                  "startLine": 126,
                  "startColumn": 1,
                  "endLine": 126,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/ICreateNewManifestCommand.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'ICreateNewManifestCommand.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/ICreateNewManifestCommand.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 1,
                  "endLine": 9,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/IRunAnalysisCommand.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'IRunAnalysisCommand.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/IRunAnalysisCommand.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 1,
                  "endLine": 9,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/IValidateManifestCommand.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'IValidateManifestCommand.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/IValidateManifestCommand.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 1,
                  "endLine": 9,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/RunAnalysisCommand.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'RunAnalysisCommand.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/RunAnalysisCommand.cs",
                "region": {
                  "startLine": 53,
                  "startColumn": 1,
                  "endLine": 53,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/ValidateManifestCommand.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'ValidateManifestCommand.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/ValidateManifestCommand.cs",
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Model/ActivityManifest.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'ActivityManifest.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Model/ActivityManifest.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 1,
                  "endLine": 23,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Model/ActivitySettings.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'ActivitySettings.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Model/ActivitySettings.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 1,
                  "endLine": 11,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Model/AnalysisManifest.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Model/ArtifactsSettings.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'ArtifactsSettings.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Model/ArtifactsSettings.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 1,
                  "endLine": 13,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Model/Constants.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'Constants.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Model/Constants.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 1,
                  "endLine": 13,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Model/ImportedDataSettings.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'ImportedDataSettings.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Model/ImportedDataSettings.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 1,
                  "endLine": 11,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Model/VolumesManifest.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'VolumesManifest.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Model/VolumesManifest.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 1,
                  "endLine": 19,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Options/EvaluateOptions.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'EvaluateOptions.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Options/EvaluateOptions.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 1,
                  "endLine": 14,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Options/NewOptions.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'NewOptions.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Options/NewOptions.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 1,
                  "endLine": 11,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Options/RunOptions.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Program.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/AnalysisManifestProvider.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'AnalysisManifestProvider.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/AnalysisManifestProvider.cs",
                "region": {
                  "startLine": 54,
                  "startColumn": 1,
                  "endLine": 54,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/AnalysisRunnerBase.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'AnalysisRunnerBase.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/AnalysisRunnerBase.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 1,
                  "endLine": 59,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerInfo.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerLogs.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'ContainerLogs.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerLogs.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 1,
                  "endLine": 8,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/DirectoryService.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'DirectoryService.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/DirectoryService.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 1,
                  "endLine": 17,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/DockerClientFactory.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'DockerClientFactory.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/DockerClientFactory.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 1,
                  "endLine": 12,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/EnvironmentVariableValueProvider.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'EnvironmentVariableValueProvider.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/EnvironmentVariableValueProvider.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 15,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ExpressionEvaluator.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/FileService.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IAnalysisManifestProvider.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'IAnalysisManifestProvider.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IAnalysisManifestProvider.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 1,
                  "endLine": 10,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IContainerService.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'IContainerService.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IContainerService.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IDirectoryService.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'IDirectoryService.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IDirectoryService.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 1,
                  "endLine": 10,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IDockerClientFactory.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'IDockerClientFactory.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IDockerClientFactory.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 1,
                  "endLine": 9,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IEnvironmentVariableValueProvider.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'IEnvironmentVariableValueProvider.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IEnvironmentVariableValueProvider.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 1,
                  "endLine": 7,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IExpressionEvaluator.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'IExpressionEvaluator.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IExpressionEvaluator.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 1,
                  "endLine": 7,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IFileService.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'IFileService.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IFileService.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 1,
                  "endLine": 11,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IManifestExpressionExpander.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'IManifestExpressionExpander.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IManifestExpressionExpander.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 1,
                  "endLine": 9,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IManifestValidator.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'IManifestValidator.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IManifestValidator.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 1,
                  "endLine": 9,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/INameFactory.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'INameFactory.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/INameFactory.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 1,
                  "endLine": 7,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IOutputFolderPathCalculator.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'IOutputFolderPathCalculator.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IOutputFolderPathCalculator.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 1,
                  "endLine": 7,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IPathService.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'IPathService.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IPathService.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 1,
                  "endLine": 9,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ITarArchiveService.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'ITarArchiveService.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ITarArchiveService.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 1,
                  "endLine": 10,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IVariableExpressionProvider.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'IVariableExpressionProvider.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IVariableExpressionProvider.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 1,
                  "endLine": 10,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IYamlSerializer.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'IYamlSerializer.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IYamlSerializer.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 1,
                  "endLine": 8,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ManifestExpressionExpander.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'ManifestExpressionExpander.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ManifestExpressionExpander.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 1,
                  "endLine": 50,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ManifestValidator.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ManifestValidator.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 16,
                  "endLine": 34,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/MountedVolume.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'MountedVolume.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/MountedVolume.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 1,
                  "endLine": 10,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/NameFactory.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'NameFactory.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/NameFactory.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 15,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/OutputFolderPathCalculator.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'OutputFolderPathCalculator.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/OutputFolderPathCalculator.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 1,
                  "endLine": 42,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/PathService.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'PathService.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/PathService.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 1,
                  "endLine": 22,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/TarArchiveService.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'TarArchiveService.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/TarArchiveService.cs",
                "region": {
                  "startLine": 71,
                  "startColumn": 1,
                  "endLine": 71,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/VariableExpressionProvider.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'VariableExpressionProvider.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/VariableExpressionProvider.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/YamlSerializer.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S1451",
          "level": "warning",
          "message": "Add or update the header of this file.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Utils/SimplifiedConsoleLoggerProvider.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderFormat": "/*\u000a * SonarQube, open source software quality management tool.\u000a * Copyright (C) 2008-2013 SonarSource\u000a * mailto:contact AT sonarsource DOT com\u000a *\u000a * SonarQube is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Lesser General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 3 of the License, or (at your option) any later version.\u000a *\u000a * SonarQube is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Lesser General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Lesser General Public License\u000a * along with this program; if not, write to the Free Software Foundation,\u000a * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\u000a */\u000a",
              "IsRegularExpression": "False"
            }
          }
        },
        {
          "ruleId": "S113",
          "level": "warning",
          "message": "Add a new line at the end of the file 'SimplifiedConsoleLoggerProvider.cs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Utils/SimplifiedConsoleLoggerProvider.cs",
                "region": {
                  "startLine": 77,
                  "startColumn": 1,
                  "endLine": 77,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1192",
          "level": "warning",
          "message": "Define a constant instead of using this literal 'MY_VAR_1' 4 times.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/CreateNewManifestCommand.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 22,
                  "endLine": 39,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/CreateNewManifestCommand.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 30,
                  "endLine": 48,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/CreateNewManifestCommand.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 30,
                  "endLine": 72,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/CreateNewManifestCommand.cs",
                "region": {
                  "startLine": 96,
                  "startColumn": 30,
                  "endLine": 96,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1192",
          "level": "warning",
          "message": "Define a constant instead of using this literal 'Value1' 4 times.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/CreateNewManifestCommand.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 36,
                  "endLine": 39,
                  "endColumn": 44
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/CreateNewManifestCommand.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 44,
                  "endLine": 48,
                  "endColumn": 52
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/CreateNewManifestCommand.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 44,
                  "endLine": 72,
                  "endColumn": 52
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/CreateNewManifestCommand.cs",
                "region": {
                  "startLine": 96,
                  "startColumn": 44,
                  "endLine": 96,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1192",
          "level": "warning",
          "message": "Define a constant instead of using this literal 'MY_VAR_2' 4 times.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/CreateNewManifestCommand.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 22,
                  "endLine": 40,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/CreateNewManifestCommand.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 30,
                  "endLine": 49,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/CreateNewManifestCommand.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 30,
                  "endLine": 73,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/CreateNewManifestCommand.cs",
                "region": {
                  "startLine": 97,
                  "startColumn": 30,
                  "endLine": 97,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1192",
          "level": "warning",
          "message": "Define a constant instead of using this literal 'Value2' 4 times.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/CreateNewManifestCommand.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 36,
                  "endLine": 40,
                  "endColumn": 44
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/CreateNewManifestCommand.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 44,
                  "endLine": 49,
                  "endColumn": 52
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/CreateNewManifestCommand.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 44,
                  "endLine": 73,
                  "endColumn": 52
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/CreateNewManifestCommand.cs",
                "region": {
                  "startLine": 97,
                  "startColumn": 44,
                  "endLine": 97,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1118",
          "level": "warning",
          "message": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Program.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 11,
                  "endLine": 17,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1200",
          "level": "warning",
          "message": "Split this class into smaller and more specialized ones to reduce its dependencies on other classes from 56 to the maximum authorized 30 or less.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Program.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 11,
                  "endLine": 17,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4004",
          "level": "warning",
          "message": "Make the 'Environment' property read-only by removing the property setter or making it private.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Model/ActivityManifest.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 43,
                  "endLine": 13,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4004",
          "level": "warning",
          "message": "Make the 'Variables' property read-only by removing the property setter or making it private.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Model/AnalysisManifest.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 43,
                  "endLine": 15,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4004",
          "level": "warning",
          "message": "Make the 'Activities' property read-only by removing the property setter or making it private.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Model/AnalysisManifest.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 53,
                  "endLine": 18,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1694",
          "level": "warning",
          "message": "Convert this 'abstract' class to a concrete class with a protected constructor.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/AnalysisRunnerBase.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 27,
                  "endLine": 8,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3052",
          "level": "warning",
          "message": "Remove this initialization to 'ExportOnCompletion', the compiler will do that for you.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Model/ArtifactsSettings.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 54,
                  "endLine": 11,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1192",
          "level": "warning",
          "message": "Define a constant instead of using this literal 'Value cannot be null or whitespace.' 13 times.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 45,
                  "endLine": 35,
                  "endColumn": 82
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 68,
                  "startColumn": 45,
                  "endLine": 68,
                  "endColumn": 82
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 45,
                  "endLine": 83,
                  "endColumn": 82
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 45,
                  "endLine": 85,
                  "endColumn": 82
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 104,
                  "startColumn": 45,
                  "endLine": 104,
                  "endColumn": 82
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 106,
                  "startColumn": 45,
                  "endLine": 106,
                  "endColumn": 82
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 124,
                  "startColumn": 45,
                  "endLine": 124,
                  "endColumn": 82
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 134,
                  "startColumn": 45,
                  "endLine": 134,
                  "endColumn": 82
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 149,
                  "startColumn": 45,
                  "endLine": 149,
                  "endColumn": 82
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 162,
                  "startColumn": 45,
                  "endLine": 162,
                  "endColumn": 82
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 197,
                  "startColumn": 45,
                  "endLine": 197,
                  "endColumn": 82
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 212,
                  "startColumn": 45,
                  "endLine": 212,
                  "endColumn": 82
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 223,
                  "startColumn": 45,
                  "endLine": 223,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Utils/SimplifiedConsoleLoggerProvider.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 18,
                  "endLine": 7,
                  "endColumn": 49
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Utils/SimplifiedConsoleLoggerProvider.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 18,
                  "endLine": 7,
                  "endColumn": 49
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Utils/SimplifiedConsoleLoggerProvider.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 21,
                  "endLine": 9,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'SimplifiedConsoleLoggerProvider' or mark the type as 'sealed'.",
              "1": "'SimplifiedConsoleLoggerProvider.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'."
            }
          }
        },
        {
          "ruleId": "S1200",
          "level": "warning",
          "message": "Split this class into smaller and more specialized ones to reduce its dependencies on other classes from 33 to the maximum authorized 30 or less.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 18,
                  "endLine": 13,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1186",
          "level": "warning",
          "message": "Add a nested comment explaining why this method is empty, throw a 'NotSupportedException' or complete the implementation.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Utils/SimplifiedConsoleLoggerProvider.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 21,
                  "endLine": 9,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ActivityFactory.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 13,
                  "endLine": 35,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/ValidateManifestCommand.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 13,
                  "endLine": 29,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/ValidateManifestCommand.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 13,
                  "endLine": 33,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/YamlSerializer.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 13,
                  "endLine": 11,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/RunProcessorsActivity.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 13,
                  "endLine": 27,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ActivityExecutor.cs",
                "region": {
                  "startLine": 53,
                  "startColumn": 17,
                  "endLine": 53,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ActivityExecutor.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 17,
                  "endLine": 61,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/RunProcessorsActivity.cs",
                "region": {
                  "startLine": 43,
                  "startColumn": 21,
                  "endLine": 43,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/CreateNewManifestCommand.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 13,
                  "endLine": 21,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/YamlSerializer.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 13,
                  "endLine": 23,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S138",
          "level": "warning",
          "message": "This method 'ExecuteAsync' has 97 lines, which is greater than the 80 lines authorized. Split it into smaller methods.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/CreateNewManifestCommand.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 32,
                  "endLine": 19,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4018",
          "level": "warning",
          "message": "Refactor this method to have parameters matching all the type parameters.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/YamlSerializer.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 18,
                  "endLine": 9,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/ValidateManifestCommand.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 32,
                  "endLine": 27,
                  "endColumn": 44
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/ValidateManifestCommand.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 23,
                  "endLine": 30,
                  "endColumn": 105
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/RunProcessorsActivity.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 33,
                  "endLine": 25,
                  "endColumn": 45
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/RunProcessorsActivity.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 23,
                  "endLine": 28,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2221",
          "level": "warning",
          "message": "Catch a list of specific exception subtype or use exception filters instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/RunProcessorsActivity.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 24,
                  "endLine": 46,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/CreateNewManifestCommand.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 32,
                  "endLine": 19,
                  "endColumn": 44
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/CreateNewManifestCommand.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 23,
                  "endLine": 22,
                  "endColumn": 101
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/VariableExpressionProvider.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 13,
                  "endLine": 14,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Utils/SimplifiedConsoleLoggerProvider.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 17,
                  "endLine": 33,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/VariableExpressionProvider.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 13,
                  "endLine": 22,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/RunProcessorsActivity.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 40,
                  "endLine": 32,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/RunProcessorsActivity.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 42,
                  "endLine": 48,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/AnalysisManifestProvider.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 13,
                  "endLine": 30,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/AnalysisManifestProvider.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 45,
                  "endLine": 28,
                  "endColumn": 53
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/AnalysisManifestProvider.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 23,
                  "endLine": 31,
                  "endColumn": 97
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2221",
          "level": "warning",
          "message": "Catch a list of specific exception subtype or use exception filters instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/AnalysisManifestProvider.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 20,
                  "endLine": 46,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/TarArchiveService.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 13,
                  "endLine": 24,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/TarArchiveService.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 13,
                  "endLine": 41,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/TarArchiveService.cs",
                "region": {
                  "startLine": 43,
                  "startColumn": 13,
                  "endLine": 43,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/TarArchiveService.cs",
                "region": {
                  "startLine": 52,
                  "startColumn": 17,
                  "endLine": 52,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/TarArchiveService.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 17,
                  "endLine": 60,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3254",
          "level": "warning",
          "message": "Remove this default value assigned to parameter 'searchPattern'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/TarArchiveService.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 39,
                  "endLine": 31,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/AnalysisManifestProvider.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 34,
                  "endLine": 35,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/AnalysisManifestProvider.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 38,
                  "endLine": 48,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ActivityExecutor.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 13,
                  "endLine": 91,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ActivityExecutor.cs",
                "region": {
                  "startLine": 99,
                  "startColumn": 13,
                  "endLine": 99,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ActivityExecutor.cs",
                "region": {
                  "startLine": 107,
                  "startColumn": 13,
                  "endLine": 107,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4056",
          "level": "warning",
          "message": "Use the overload that takes a 'CultureInfo' or 'IFormatProvider' parameter.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Utils/SimplifiedConsoleLoggerProvider.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 32,
                  "endLine": 39,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3900",
          "level": "warning",
          "message": "Refactor this method to add validation of parameter 'manifest' before using it.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ActivityExecutor.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 48,
                  "endLine": 31,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ActivityExecutor.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 36,
                  "endLine": 33,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ActivityExecutor.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 36,
                  "endLine": 39,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ActivityExecutor.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 40,
                  "endLine": 44,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ActivityExecutor.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 40,
                  "endLine": 46,
                  "endColumn": 88
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ActivityExecutor.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 40,
                  "endLine": 48,
                  "endColumn": 95
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ActivityExecutor.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 40,
                  "endLine": 50,
                  "endColumn": 87
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ActivityExecutor.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 40,
                  "endLine": 59,
                  "endColumn": 86
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ActivityExecutor.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 40,
                  "endLine": 60,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ActivityExecutor.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 38,
                  "endLine": 62,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ActivityExecutor.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 38,
                  "endLine": 73,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ActivityExecutor.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 40,
                  "endLine": 78,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ActivityExecutor.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 40,
                  "endLine": 80,
                  "endColumn": 88
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ActivityExecutor.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 40,
                  "endLine": 82,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ActivityExecutor.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 40,
                  "endLine": 84,
                  "endColumn": 88
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/AnalysisRunnerBase.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 13,
                  "endLine": 29,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/OutputFolderPathCalculator.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 13,
                  "endLine": 16,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/OutputFolderPathCalculator.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 13,
                  "endLine": 18,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/OutputFolderPathCalculator.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 13,
                  "endLine": 20,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/OutputFolderPathCalculator.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 13,
                  "endLine": 23,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/OutputFolderPathCalculator.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 13,
                  "endLine": 26,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/OutputFolderPathCalculator.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 13,
                  "endLine": 33,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/OutputFolderPathCalculator.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 13,
                  "endLine": 36,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/CompositeActivity.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 13,
                  "endLine": 17,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/CompositeActivity.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 17,
                  "endLine": 25,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/EnvironmentVariableValueProvider.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 13,
                  "endLine": 9,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4058",
          "level": "warning",
          "message": "Change this call to 'originalFolderPath.StartsWith' to an overload that accepts a 'StringComparison' as a parameter.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/OutputFolderPathCalculator.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 17,
                  "endLine": 23,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4058",
          "level": "warning",
          "message": "Change this call to 'originalFolderPath.EndsWith' to an overload that accepts a 'StringComparison' as a parameter.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/OutputFolderPathCalculator.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 17,
                  "endLine": 26,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4058",
          "level": "warning",
          "message": "Change this call to 'fullPath.Replace' to an overload that accepts a 'StringComparison' as a parameter.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/OutputFolderPathCalculator.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 24,
                  "endLine": 34,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4058",
          "level": "warning",
          "message": "Change this call to 'relativePath.StartsWith' to an overload that accepts a 'StringComparison' as a parameter.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/OutputFolderPathCalculator.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 17,
                  "endLine": 36,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4058",
          "level": "warning",
          "message": "Change this call to 'relativePath.StartsWith' to an overload that accepts a 'StringComparison' as a parameter.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/OutputFolderPathCalculator.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 49,
                  "endLine": 36,
                  "endColumn": 78
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4058",
          "level": "warning",
          "message": "Change this call to '_pathService.Combine(fullPath, relativePath).Replace' to an overload that accepts a 'StringComparison' as a parameter.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/OutputFolderPathCalculator.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 20,
                  "endLine": 39,
                  "endColumn": 83
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/CompositeActivity.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 33,
                  "endLine": 15,
                  "endColumn": 45
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/CompositeActivity.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 23,
                  "endLine": 18,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/FileService.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 13,
                  "endLine": 11,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/AnalysisRunnerBase.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 49,
                  "endLine": 27,
                  "endColumn": 65
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/AnalysisRunnerBase.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 23,
                  "endLine": 30,
                  "endColumn": 105
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/FileService.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 13,
                  "endLine": 19,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/FileService.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 13,
                  "endLine": 21,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1227",
          "level": "warning",
          "message": "Refactor the code in order to remove this break statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/CompositeActivity.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 17,
                  "endLine": 29,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/RunAnalysisCommand.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 13,
                  "endLine": 30,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/RunAnalysisCommand.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 13,
                  "endLine": 34,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/RunAnalysisCommand.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 32,
                  "endLine": 28,
                  "endColumn": 44
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/RunAnalysisCommand.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 23,
                  "endLine": 31,
                  "endColumn": 105
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/AnalysisRunnerBase.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 35,
                  "endLine": 32,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/AnalysisRunnerBase.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 33,
                  "endLine": 37,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/AnalysisRunnerBase.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 35,
                  "endLine": 41,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/AnalysisRunnerBase.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 35,
                  "endLine": 42,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/AnalysisRunnerBase.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 39,
                  "endLine": 46,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/AnalysisRunnerBase.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 35,
                  "endLine": 50,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/AnalysisRunnerBase.cs",
                "region": {
                  "startLine": 52,
                  "startColumn": 35,
                  "endLine": 52,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/AnalysisRunnerBase.cs",
                "region": {
                  "startLine": 54,
                  "startColumn": 35,
                  "endLine": 54,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2360",
          "level": "warning",
          "message": "Use the overloading mechanism instead of the optional parameters.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IContainerService.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 79,
                  "endLine": 13,
                  "endColumn": 83
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2360",
          "level": "warning",
          "message": "Use the overloading mechanism instead of the optional parameters.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IContainerService.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 66,
                  "endLine": 14,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3900",
          "level": "warning",
          "message": "Refactor this method to add validation of parameter 'originalFolderPath' before using it.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/OutputFolderPathCalculator.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 17,
                  "endLine": 26,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2360",
          "level": "warning",
          "message": "Use the overloading mechanism instead of the optional parameters.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IContainerService.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 72,
                  "endLine": 17,
                  "endColumn": 77
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4261",
          "level": "warning",
          "message": "Add the 'Async' suffix to the name of this method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IContainerService.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 29,
                  "endLine": 16,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4261",
          "level": "warning",
          "message": "Add the 'Async' suffix to the name of this method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IContainerService.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 14,
                  "endLine": 17,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1854",
          "level": "warning",
          "message": "Remove this useless assignment to local variable 'originalFolderPath'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/OutputFolderPathCalculator.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 36,
                  "endLine": 27,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/RunAnalysisCommand.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 35,
                  "endLine": 37,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/RunAnalysisCommand.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 35,
                  "endLine": 42,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/RunAnalysisCommand.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 35,
                  "endLine": 46,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Commands/RunAnalysisCommand.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 35,
                  "endLine": 48,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ProcessingContext.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 13,
                  "endLine": 29,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ProcessingContext.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 13,
                  "endLine": 32,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ProcessingContext.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 13,
                  "endLine": 35,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4018",
          "level": "warning",
          "message": "Refactor this method to have parameters matching all the type parameters.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/IYamlSerializer.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 11,
                  "endLine": 5,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ExpressionEvaluator.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 13,
                  "endLine": 27,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ManifestExpressionExpander.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 13,
                  "endLine": 21,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ManifestValidator.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 13,
                  "endLine": 21,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ManifestValidator.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 13,
                  "endLine": 26,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/NameFactory.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 13,
                  "endLine": 9,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ImportDataActivity.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 13,
                  "endLine": 39,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ExportArtifactsActivity.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 13,
                  "endLine": 40,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ManifestExpressionExpander.cs",
                "region": {
                  "startLine": 43,
                  "startColumn": 13,
                  "endLine": 43,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 13,
                  "endLine": 32,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 13,
                  "endLine": 34,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ManifestValidator.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 13,
                  "endLine": 46,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ManifestValidator.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 17,
                  "endLine": 59,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ManifestValidator.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 21,
                  "endLine": 67,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3956",
          "level": "warning",
          "message": "Refactor this method to use a generic collection designed for inheritance.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ManifestValidator.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 85,
                  "endLine": 39,
                  "endColumn": 107
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ManifestValidator.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 34,
                  "endLine": 31,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 13,
                  "endLine": 67,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 13,
                  "endLine": 69,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ImportDataActivity.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 33,
                  "endLine": 37,
                  "endColumn": 45
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ImportDataActivity.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 23,
                  "endLine": 40,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 13,
                  "endLine": 80,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 13,
                  "endLine": 82,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 13,
                  "endLine": 84,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 35,
                  "endLine": 26,
                  "endColumn": 55
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 23,
                  "endLine": 33,
                  "endColumn": 65
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 23,
                  "endLine": 35,
                  "endColumn": 102
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ExportArtifactsActivity.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 33,
                  "endLine": 38,
                  "endColumn": 45
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ExportArtifactsActivity.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 23,
                  "endLine": 41,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 27,
                  "endLine": 65,
                  "endColumn": 40
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 68,
                  "startColumn": 23,
                  "endLine": 68,
                  "endColumn": 104
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 23,
                  "endLine": 70,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 27,
                  "endLine": 78,
                  "endColumn": 56
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 81,
                  "startColumn": 23,
                  "endLine": 81,
                  "endColumn": 66
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 23,
                  "endLine": 83,
                  "endColumn": 104
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 23,
                  "endLine": 85,
                  "endColumn": 106
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ManifestValidator.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 13,
                  "endLine": 85,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ManifestValidator.cs",
                "region": {
                  "startLine": 87,
                  "startColumn": 13,
                  "endLine": 87,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ManifestValidator.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 13,
                  "endLine": 89,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ManifestValidator.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 13,
                  "endLine": 92,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ImportDataActivity.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 40,
                  "endLine": 46,
                  "endColumn": 113
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ImportDataActivity.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 36,
                  "endLine": 50,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 101,
                  "startColumn": 13,
                  "endLine": 101,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 103,
                  "startColumn": 13,
                  "endLine": 103,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 105,
                  "startColumn": 13,
                  "endLine": 105,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ImportDataActivity.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 40,
                  "endLine": 69,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 123,
                  "startColumn": 13,
                  "endLine": 123,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 133,
                  "startColumn": 13,
                  "endLine": 133,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 135,
                  "startColumn": 13,
                  "endLine": 135,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 121,
                  "startColumn": 27,
                  "endLine": 121,
                  "endColumn": 46
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 124,
                  "startColumn": 23,
                  "endLine": 124,
                  "endColumn": 104
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 99,
                  "startColumn": 27,
                  "endLine": 99,
                  "endColumn": 56
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 102,
                  "startColumn": 23,
                  "endLine": 102,
                  "endColumn": 67
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 104,
                  "startColumn": 23,
                  "endLine": 104,
                  "endColumn": 104
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 106,
                  "startColumn": 23,
                  "endLine": 106,
                  "endColumn": 106
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ExpressionEvaluator.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 13,
                  "endLine": 35,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 148,
                  "startColumn": 13,
                  "endLine": 148,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 131,
                  "startColumn": 27,
                  "endLine": 131,
                  "endColumn": 45
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 134,
                  "startColumn": 23,
                  "endLine": 134,
                  "endColumn": 104
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 136,
                  "startColumn": 23,
                  "endLine": 136,
                  "endColumn": 85
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ExportArtifactsActivity.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 40,
                  "endLine": 45,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ExportArtifactsActivity.cs",
                "region": {
                  "startLine": 52,
                  "startColumn": 40,
                  "endLine": 52,
                  "endColumn": 104
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ExportArtifactsActivity.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 36,
                  "endLine": 56,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4055",
          "level": "warning",
          "message": "Replace this string literal with a string retrieved through an instance of the 'ResourceManager' class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Activities/ExportArtifactsActivity.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 40,
                  "endLine": 80,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 146,
                  "startColumn": 27,
                  "endLine": 146,
                  "endColumn": 47
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 149,
                  "startColumn": 23,
                  "endLine": 149,
                  "endColumn": 104
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 161,
                  "startColumn": 13,
                  "endLine": 161,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 196,
                  "startColumn": 13,
                  "endLine": 196,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4040",
          "level": "warning",
          "message": "Change this normalization to 'ToUpperInvariant()'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ExpressionEvaluator.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 71,
                  "endLine": 40,
                  "endColumn": 87
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 194,
                  "startColumn": 35,
                  "endLine": 194,
                  "endColumn": 52
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 197,
                  "startColumn": 23,
                  "endLine": 197,
                  "endColumn": 105
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 159,
                  "startColumn": 42,
                  "endLine": 159,
                  "endColumn": 63
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 162,
                  "startColumn": 23,
                  "endLine": 162,
                  "endColumn": 104
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 211,
                  "startColumn": 13,
                  "endLine": 211,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 222,
                  "startColumn": 13,
                  "endLine": 222,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S121",
          "level": "warning",
          "message": "Add curly braces around the nested statement(s) in this 'if' block.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 230,
                  "startColumn": 17,
                  "endLine": 230,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 209,
                  "startColumn": 27,
                  "endLine": 209,
                  "endColumn": 44
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 212,
                  "startColumn": 23,
                  "endLine": 212,
                  "endColumn": 101
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 220,
                  "startColumn": 42,
                  "endLine": 220,
                  "endColumn": 58
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///src/src/CodeReview.Orchestrator/Services/ContainerService.cs",
                "region": {
                  "startLine": 223,
                  "startColumn": 23,
                  "endLine": 223,
                  "endColumn": 104
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3992",
          "level": "warning",
          "message": "Provide a 'ComVisible' attribute for assembly 'CodeReview.Orchestrator'.",
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3990",
          "level": "warning",
          "message": "Provide a 'CLSCompliant' attribute for assembly 'CodeReview.Orchestrator'.",
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "S1118": {
          "id": "S1118",
          "shortDescription": "Utility classes should not have public constructors",
          "fullDescription": "Utility classes, which are collections of static members, are not meant to be instantiated.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1118",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S113": {
          "id": "S113",
          "shortDescription": "Files should contain an empty newline at the end",
          "fullDescription": "Some tools work better when files end with an empty line.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-113",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S1135": {
          "id": "S1135",
          "shortDescription": "Track uses of \"TODO\" tags",
          "fullDescription": "TODO tags are commonly used to mark places where some more code is required, but which the developer wants to implement later.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1135",
          "properties": {
            "category": "Info Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S1186": {
          "id": "S1186",
          "shortDescription": "Methods should not be empty",
          "fullDescription": "There are several reasons for a method not to have a method body:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1186",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S1192": {
          "id": "S1192",
          "shortDescription": "String literals should not be duplicated",
          "fullDescription": "Duplicated string literals make the process of refactoring error-prone, since you must be sure to update all occurrences.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1192",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope"
            ]
          }
        },
        "S1200": {
          "id": "S1200",
          "shortDescription": "Classes should not be coupled to too many other classes (Single Responsibility Principle)",
          "fullDescription": "According to the Single Responsibility Principle, introduced by Robert C. Martin in his book \"Principles of Object Oriented Design\", a class should have only one responsibility:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1200",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope"
            ]
          }
        },
        "S121": {
          "id": "S121",
          "shortDescription": "Control structures should use curly braces",
          "fullDescription": "While not technically incorrect, the omission of curly braces can be misleading, and may lead to the introduction of errors during maintenance.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-121",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S1227": {
          "id": "S1227",
          "shortDescription": "break statements should not be used except for switch cases",
          "fullDescription": "break; is an unstructured control flow statement which makes code harder to read.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1227",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S138": {
          "id": "S138",
          "shortDescription": "Functions should not have too many lines of code",
          "fullDescription": "A function that grows too large tends to aggregate too many responsibilities.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-138",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope"
            ]
          }
        },
        "S1451": {
          "id": "S1451",
          "shortDescription": "Track lack of copyright and license headers",
          "fullDescription": "Each source file should start with a header stating file ownership and the license which must be used to distribute the application. ",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1451",
          "properties": {
            "category": "Blocker Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S1694": {
          "id": "S1694",
          "shortDescription": "An abstract class should have both abstract and concrete methods",
          "fullDescription": "The purpose of an abstract class is to provide some heritable behaviors while also defining methods which must be implemented by sub-classes.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1694",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope"
            ]
          }
        },
        "S1854": {
          "id": "S1854",
          "shortDescription": "Unused assignments should be removed",
          "fullDescription": "A dead store happens when a local variable is assigned a value that is not read by any subsequent instruction. Calculating or retrieving a value only to then overwrite it or throw it away, could indicate a serious error in the code. Even if it's not an error, it is at best a waste of resources. Therefore all calculated values should be used.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1854",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S2221": {
          "id": "S2221",
          "shortDescription": "\"Exception\" should not be caught when not required by called methods",
          "fullDescription": "Catching System.Exception seems like an efficient way to handle multiple possible exceptions. Unfortunately, it traps all exception types, including the ones that were not intended to be caught. To prevent any misunderstandings, the exception filters should be used. Alternatively each exception type should be in a separate catch block.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2221",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope"
            ]
          }
        },
        "S2360": {
          "id": "S2360",
          "shortDescription": "Optional parameters should not be used",
          "fullDescription": "The overloading mechanism should be used in place of optional parameters for several reasons:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2360",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S3052": {
          "id": "S3052",
          "shortDescription": "Members should not be initialized to default values",
          "fullDescription": "The compiler automatically initializes class fields, auto-properties and events to their default values before setting them with any initialization values, so there is no need to explicitly set a member to its default value. Further, under the logic that cleaner code is better code, it's considered poor style to do so.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3052",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S3254": {
          "id": "S3254",
          "shortDescription": "Default parameter values should not be passed as arguments",
          "fullDescription": "Specifying the default parameter values in a method call is redundant. Such values should be omitted in the interests of readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3254",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope"
            ]
          }
        },
        "S3881": {
          "id": "S3881",
          "shortDescription": "\"IDisposable\" should be implemented correctly",
          "fullDescription": "The IDisposable interface is a mechanism to release unmanaged resources, if not implemented correctly this could result in resource leaks or more severe bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3881",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S3900": {
          "id": "S3900",
          "shortDescription": "Arguments of public methods should be validated against null",
          "fullDescription": "A publicly accessible method can be called from anywhere, which means you should validate parameters to be within the expected constraints. In general, checking against null is recommended defensive programming.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3900",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S3956": {
          "id": "S3956",
          "shortDescription": "\"Generic.List\" instances should not be part of public APIs",
          "fullDescription": "System.Collections.Generic.List<T> is a generic collection that is designed for performance and not inheritance. For example, it does not contain virtual members that make it easier to change the behavior of an inherited class. That means that future attempts to expand the behavior will be spoiled because the extension points simply aren't there. Instead, one of the following generic collections should be used:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3956",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope"
            ]
          }
        },
        "S3990": {
          "id": "S3990",
          "shortDescription": "Assemblies should be marked as CLS compliant",
          "fullDescription": "Assemblies should conform with the Common Language Specification (CLS) in order to be usable across programming languages. To be compliant an assembly has to indicate it with System.CLSCompliantAttribute.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3990",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S3992": {
          "id": "S3992",
          "shortDescription": "Assemblies should explicitly specify COM visibility",
          "fullDescription": "Assemblies should explicitly indicate whether they are meant to be COM visible or not. If the ComVisibleAttribute is not present, the default is to make the content of the assembly visible to COM clients.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3992",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S4004": {
          "id": "S4004",
          "shortDescription": "Collection properties should be readonly",
          "fullDescription": "A writable collection property can be replaced by a completely different collection. Making it readonly prevents that while still allowing individual members to be set. If you want to allow the replacement of the whole collection the recommended pattern is to implement a method to remove all the elements (e.g. System.Collections.List<T>.Clear) and a method to populate the collection (e.g. System.Collections.List<T>.AddRange).",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4004",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S4018": {
          "id": "S4018",
          "shortDescription": "Generic methods should provide type parameters",
          "fullDescription": "The best way to determine the type of a generic method is by inference based on the type of argument that is passed to the method. This is not possible when a parameter type is missing from the argument list.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4018",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S4040": {
          "id": "S4040",
          "shortDescription": "Strings should be normalized to uppercase",
          "fullDescription": "Certain characters, once normalized to lowercase, cannot make a round trip. That is, they can not be converted from one locale to another and then accurately restored to their original characters.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4040",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S4055": {
          "id": "S4055",
          "shortDescription": "Literals should not be passed as localized parameters",
          "fullDescription": "String literals embedded in the source code will not be localized properly.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4055",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope"
            ]
          }
        },
        "S4056": {
          "id": "S4056",
          "shortDescription": "Overloads with a \"CultureInfo\" or an \"IFormatProvider\" parameter should be used",
          "fullDescription": "When a System.Globalization.CultureInfo or IFormatProvider object is not supplied, the default value that is supplied by the overloaded member might not have the effect that you want in all locales.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4056",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S4058": {
          "id": "S4058",
          "shortDescription": "Overloads with a \"StringComparison\" parameter should be used",
          "fullDescription": "Many string operations, the Compare and Equals methods in particular, provide an overload that accepts a StringComparison enumeration value as a parameter. Calling these overloads and explicitly providing this parameter makes your code clearer and easier to maintain.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4058",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S4261": {
          "id": "S4261",
          "shortDescription": "Methods should be named according to their synchronicities",
          "fullDescription": "According to the Task-based Asynchronous Pattern (TAP), methods returning either a System.Threading.Tasks.Task or a System.Threading.Tasks.Task<TResult> are considered \"asynchronous\". Such methods should use the Async suffix. Conversely methods which do not return such Tasks should not have an \"Async\" suffix in their names.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4261",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S4457": {
          "id": "S4457",
          "shortDescription": "Parameter validation in \"async\"/\"await\" methods should be wrapped",
          "fullDescription": "Because of the way async/await methods are rewritten by the compiler, any exceptions thrown during the parameters check will happen only when the task is observed. That could happen far away from the source of the buggy code or never happen for fire-and-forget tasks.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4457",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        }
      }
    }
  ]
}