[
  {
    "id": "Microsoft.VisualStudio.Threading.Analyzers",
    "version": "16.8.55",
    "description": "Static code analyzer to detect common mistakes or potential issues regarding threading and async coding.",
    "diagnostics": [
      {
        "id": "VSTHRD001",
        "title": "Avoid legacy thread switching APIs",
        "defaultSeverity": "Warning",
        "isEnabledByDefault": true,
        "category": "Usage",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD001.md",
        "messageFormat": "Await JoinableTaskFactory.SwitchToMainThreadAsync() to switch to the UI thread instead of APIs that can deadlock or require specifying a priority.",
        "customTags": []
      },
      {
        "id": "VSTHRD002",
        "title": "Avoid problematic synchronous waits",
        "defaultSeverity": "Warning",
        "isEnabledByDefault": true,
        "category": "Usage",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD002.md",
        "messageFormat": "Synchronously waiting on tasks or awaiters may cause deadlocks. Use await or JoinableTaskFactory.Run instead.",
        "customTags": []
      },
      {
        "id": "VSTHRD003",
        "title": "Avoid awaiting foreign Tasks",
        "defaultSeverity": "Warning",
        "isEnabledByDefault": true,
        "category": "Usage",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD003.md",
        "messageFormat": "Avoid awaiting or returning a Task representing work that was not started within your context as that can lead to deadlocks.\r\nStart the work within this context, or use JoinableTaskFactory.RunAsync to start the task and await the returned JoinableTask instead.",
        "customTags": []
      },
      {
        "id": "VSTHRD004",
        "title": "Await SwitchToMainThreadAsync",
        "defaultSeverity": "Error",
        "isEnabledByDefault": true,
        "category": "Usage",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD004.md",
        "messageFormat": "Calls to JoinableTaskFactory.SwitchToMainThreadAsync() must be awaited.",
        "customTags": []
      },
      {
        "id": "VSTHRD010",
        "title": "Invoke single-threaded types on Main thread",
        "defaultSeverity": "Warning",
        "isEnabledByDefault": true,
        "category": "Usage",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD010.md",
        "messageFormat": "Accessing \"{0}\" should only be done on the main thread. Call {1}() first.",
        "customTags": []
      },
      {
        "id": "VSTHRD010",
        "title": "Invoke single-threaded types on Main thread",
        "defaultSeverity": "Warning",
        "isEnabledByDefault": true,
        "category": "Usage",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD010.md",
        "messageFormat": "Accessing \"{0}\" should only be done on the main thread. Await JoinableTaskFactory.SwitchToMainThreadAsync() first.",
        "customTags": []
      },
      {
        "id": "VSTHRD011",
        "title": "Use AsyncLazy<T>",
        "defaultSeverity": "Error",
        "isEnabledByDefault": true,
        "category": "Usage",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD011.md",
        "messageFormat": "Lazy<Task<T>>.Value can deadlock.\r\nUse AsyncLazy<T> instead.",
        "customTags": []
      },
      {
        "id": "VSTHRD011",
        "title": "Use AsyncLazy<T>",
        "defaultSeverity": "Error",
        "isEnabledByDefault": true,
        "category": "Usage",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD011.md",
        "messageFormat": "Invoking or blocking on async code in a Lazy<T> value factory can deadlock.\r\nUse AsyncLazy<T> instead.",
        "customTags": []
      },
      {
        "id": "VSTHRD012",
        "title": "Provide JoinableTaskFactory where allowed",
        "defaultSeverity": "Warning",
        "isEnabledByDefault": true,
        "category": "Usage",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD012.md",
        "messageFormat": "Provide an instance of JoinableTaskFactory in this call (or another overload) to avoid deadlocks with the main thread.",
        "customTags": []
      },
      {
        "id": "VSTHRD100",
        "title": "Avoid async void methods",
        "defaultSeverity": "Warning",
        "isEnabledByDefault": true,
        "category": "Usage",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD100.md",
        "messageFormat": "Avoid \"async void\" methods, because any exceptions not handled by the method will crash the process.",
        "customTags": []
      },
      {
        "id": "VSTHRD100",
        "title": "Avoid async void methods",
        "defaultSeverity": "Warning",
        "isEnabledByDefault": true,
        "category": "Usage",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD100.md",
        "messageFormat": "Avoid \"async void\" methods, because any exceptions not handled by the method will crash the process.",
        "customTags": []
      },
      {
        "id": "VSTHRD101",
        "title": "Avoid unsupported async delegates",
        "defaultSeverity": "Warning",
        "isEnabledByDefault": true,
        "category": "Usage",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD101.md",
        "messageFormat": "Avoid using async lambda for a void returning delegate type, because any exceptions not handled by the delegate will crash the process.",
        "customTags": []
      },
      {
        "id": "VSTHRD101",
        "title": "Avoid unsupported async delegates",
        "defaultSeverity": "Warning",
        "isEnabledByDefault": true,
        "category": "Usage",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD101.md",
        "messageFormat": "Avoid using async lambda for a void returning delegate type, because any exceptions not handled by the delegate will crash the process.",
        "customTags": []
      },
      {
        "id": "VSTHRD102",
        "title": "Implement internal logic asynchronously",
        "defaultSeverity": "Info",
        "isEnabledByDefault": true,
        "category": "Usage",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD102.md",
        "messageFormat": "Limit use of synchronously blocking method calls such as JoinableTaskFactory.Run or Task.Result to public entrypoint members where you must be synchronous. Using it for internal members can needlessly add synchronous frames between asynchronous frames, leading to threadpool exhaustion.",
        "customTags": []
      },
      {
        "id": "VSTHRD103",
        "title": "Call async methods when in an async method",
        "defaultSeverity": "Warning",
        "isEnabledByDefault": true,
        "category": "Usage",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD103.md",
        "messageFormat": "{0} synchronously blocks. Await {1} instead.",
        "customTags": []
      },
      {
        "id": "VSTHRD103",
        "title": "Call async methods when in an async method",
        "defaultSeverity": "Warning",
        "isEnabledByDefault": true,
        "category": "Usage",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD103.md",
        "messageFormat": "{0} synchronously blocks. Use await instead.",
        "customTags": []
      },
      {
        "id": "VSTHRD104",
        "title": "Offer async methods",
        "defaultSeverity": "Info",
        "isEnabledByDefault": true,
        "category": "Usage",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD104.md",
        "messageFormat": "Expose an async version of this method that does not synchronously block. Then simplify this method to call that async method within a JoinableTaskFactory.Run delegate.",
        "customTags": []
      },
      {
        "id": "VSTHRD105",
        "title": "Avoid method overloads that assume TaskScheduler.Current",
        "defaultSeverity": "Warning",
        "isEnabledByDefault": true,
        "category": "Usage",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD105.md",
        "messageFormat": "Avoid method overloads that assume TaskScheduler.Current. Use an overload that accepts a TaskScheduler and specify TaskScheduler.Default (or any other) explicitly.",
        "customTags": []
      },
      {
        "id": "VSTHRD106",
        "title": "Use InvokeAsync to raise async events",
        "defaultSeverity": "Warning",
        "isEnabledByDefault": true,
        "category": "Usage",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD106.md",
        "messageFormat": "AsyncEventHandler delegates should be invoked via the extension method \"TplExtensions.InvokeAsync()\" defined in Microsoft.VisualStudio.Threading assembly.",
        "customTags": []
      },
      {
        "id": "VSTHRD106",
        "title": "Use InvokeAsync to raise async events",
        "defaultSeverity": "Warning",
        "isEnabledByDefault": true,
        "category": "Usage",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD106.md",
        "messageFormat": "AsyncEventHandler delegates should be invoked via the extension method \"TplExtensions.InvokeAsync()\" defined in Microsoft.VisualStudio.Threading assembly.",
        "customTags": []
      },
      {
        "id": "VSTHRD107",
        "title": "Await Task within using expression",
        "defaultSeverity": "Error",
        "isEnabledByDefault": true,
        "category": "Usage",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD107.md",
        "messageFormat": "Missing await operator for \"using\" expression.",
        "customTags": []
      },
      {
        "id": "VSTHRD108",
        "title": "Assert thread affinity unconditionally",
        "defaultSeverity": "Warning",
        "isEnabledByDefault": true,
        "category": "Usage",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD108.md",
        "messageFormat": "Thread affinity checks should be unconditional.",
        "customTags": []
      },
      {
        "id": "VSTHRD109",
        "title": "Switch instead of assert in async methods",
        "defaultSeverity": "Error",
        "isEnabledByDefault": true,
        "category": "Usage",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD109.md",
        "messageFormat": "Avoid throwing when not on the main thread while in an async or Task-returning method. Switch to the thread required instead.",
        "customTags": []
      },
      {
        "id": "VSTHRD110",
        "title": "Observe result of async calls",
        "defaultSeverity": "Warning",
        "isEnabledByDefault": true,
        "category": "Usage",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD110.md",
        "messageFormat": "Observe the awaitable result of this method call by awaiting it, assigning to a variable, or passing it to another method.",
        "customTags": []
      },
      {
        "id": "VSTHRD111",
        "title": "Use ConfigureAwait(bool)",
        "defaultSeverity": "Hidden",
        "isEnabledByDefault": true,
        "category": "Usage",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD111.md",
        "messageFormat": "Add .ConfigureAwait(bool) to your await expression.",
        "customTags": []
      },
      {
        "id": "VSTHRD111",
        "title": "Use ConfigureAwait(bool)",
        "defaultSeverity": "Hidden",
        "isEnabledByDefault": true,
        "category": "Usage",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD111.md",
        "messageFormat": "Add .ConfigureAwait(bool) to your await expression.",
        "customTags": []
      },
      {
        "id": "VSTHRD112",
        "title": "Implement System.IAsyncDisposable",
        "defaultSeverity": "Info",
        "isEnabledByDefault": true,
        "category": "Usage",
        "description": "The System.IAsyncDisposable interface is defined in the Microsoft.Bcl.AsyncInterfaces NuGet package.",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD112.md",
        "messageFormat": "Implement the System.IAsyncDisposable interface when implementing the obsolete Microsoft.VisualStudio.Threading.IAsyncDisposable interface.",
        "customTags": []
      },
      {
        "id": "VSTHRD113",
        "title": "Check for System.IAsyncDisposable",
        "defaultSeverity": "Info",
        "isEnabledByDefault": true,
        "category": "Usage",
        "description": "The System.IAsyncDisposable interface is defined in the Microsoft.Bcl.AsyncInterfaces NuGet package.",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD113.md",
        "messageFormat": "Add a check for System.IAsyncDisposable in the same code block that checks for Microsoft.VisualStudio.Threading.IAsyncDisposable that behaves similarly.",
        "customTags": []
      },
      {
        "id": "VSTHRD113",
        "title": "Check for System.IAsyncDisposable",
        "defaultSeverity": "Info",
        "isEnabledByDefault": true,
        "category": "Usage",
        "description": "The System.IAsyncDisposable interface is defined in the Microsoft.Bcl.AsyncInterfaces NuGet package.",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD113.md",
        "messageFormat": "Add a check for System.IAsyncDisposable in the same code block that checks for Microsoft.VisualStudio.Threading.IAsyncDisposable that behaves similarly.",
        "customTags": []
      },
      {
        "id": "VSTHRD114",
        "title": "Avoid returning a null Task",
        "defaultSeverity": "Warning",
        "isEnabledByDefault": true,
        "category": "Usage",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD114.md",
        "messageFormat": "Avoid returning null from a Task-returning method.",
        "customTags": []
      },
      {
        "id": "VSTHRD114",
        "title": "Avoid returning a null Task",
        "defaultSeverity": "Warning",
        "isEnabledByDefault": true,
        "category": "Usage",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD114.md",
        "messageFormat": "Avoid returning null from a Task-returning method.",
        "customTags": []
      },
      {
        "id": "VSTHRD200",
        "title": "Use \"Async\" suffix for async methods",
        "defaultSeverity": "Warning",
        "isEnabledByDefault": true,
        "category": "Style",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD200.md",
        "messageFormat": "Use \"Async\" suffix in names of methods that return an awaitable type.",
        "customTags": []
      },
      {
        "id": "VSTHRD200",
        "title": "Use \"Async\" suffix for async methods",
        "defaultSeverity": "Warning",
        "isEnabledByDefault": true,
        "category": "Style",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD200.md",
        "messageFormat": "Avoid \"Async\" suffix in names of methods that do not return an awaitable type.",
        "customTags": []
      },
      {
        "id": "VSTHRD200",
        "title": "Use \"Async\" suffix for async methods",
        "defaultSeverity": "Warning",
        "isEnabledByDefault": true,
        "category": "Style",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD200.md",
        "messageFormat": "Use \"Async\" suffix in names of methods that return an awaitable type.",
        "customTags": []
      },
      {
        "id": "VSTHRD200",
        "title": "Use \"Async\" suffix for async methods",
        "defaultSeverity": "Warning",
        "isEnabledByDefault": true,
        "category": "Style",
        "description": "",
        "helpLinkUri": "https://github.com/Microsoft/vs-threading/blob/master/doc/analyzers/VSTHRD200.md",
        "messageFormat": "Avoid \"Async\" suffix in names of methods that do not return an awaitable type.",
        "customTags": []
      }
    ]
  }
]